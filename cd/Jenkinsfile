pipeline {

  environment {
  reponame = yoko-spring-boot-docker
  branch = master
  }

  stages {
    stage ('Checkout') {
      steps {
        try {
          checkout([$class: 'GitSCM', branches: [[name: """${branch}"""]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'yoko_git', name: """${reponame}""", url: """git@github.com:yokokarim/${reponame}.git"""]]])
            currentBuild.result = 'SUCCESS'
        } catch(e) {
            currentBuild.result = 'FAILURE'
            throw e
          }
      }
    }

    stage ('Deployment') {
      when {
        expression {
          currentBuild.result == 'SUCCESS'
        }
      }
      steps {
        dir(${env.reponame} + '/cd') {
          withKubeConfig([credentialsId: 'kube-local', serverUrl: 'http://127.0.0.1:6443', clusterName: 'k8s-local']) {
            sh 'kubectl apply -f deployment.yaml'
            sh 'kubectl apply -f service.yaml'
            sh 'kubectl apply -f ingress.yaml'
          }
        }
      }
    }

  }
}
